version: '3.8'
services:
  nginx:
    build:
      context: .
      dockerfile: nginx/nginx.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php/php.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-php
    restart: unless-stopped
    tty: true
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=database
      - MYSQL_USER=laravel
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  npm:
    image: node:16-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-npm
    volumes:
      - ./src:/var/www/html
    ports:
      - "3000:3000"
      - "3001:3001"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: php/php.dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${COMPOSE_PROJECT_NAME}-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  mysql:
    driver: local